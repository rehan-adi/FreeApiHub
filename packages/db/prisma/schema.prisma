// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  password String
  name     String

  @@index([email])
}

model RandomUser {
  id           String   @id @default(cuid())
  gender       Gender
  firstName    String
  lastName     String
  email        String   @unique
  username     String   @unique
  password     String
  phone        String?
  age          Int
  streetNumber Int
  streetName   String?
  city         String
  state        String
  country      String
  postcode     Int
  picture      String
  nationality  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Joke {
  id       String  @id @default(uuid())
  author   String
  content  String
  rate     Int
  likes    Int
  dislikes Int
  category String?
}

model Quote {
  id       String  @id @default(uuid())
  author   String
  content  String
  rate     Int
  likes    Int
  dislikes Int
  category String?
}

model Book {
  id          String   @id @default(uuid())
  name        String
  author      String
  description String
  publisher   String
  publishedAt DateTime
  genre       String
  pages       Int
  imageUrl    String
  rating      Float    @default(0.0)
}

model Product {
  id                 String   @id @default(uuid())
  title              String
  description        String
  price              Int
  discountPercentage Int
  rating             Int
  stock              Int
  brand              String
  category           String
  thumbnail          String
  images             String[]
}

model ProgrammingLanguage {
  id                 String @id @default(uuid())
  name               String
  description        String
  logoUrl            String
  creator            String
  foundationYear     Int
  popularity         Int
  marketDemand       Int
  industryUse        String
  type               String
  version            String
  learningDifficulty Int
}

model Stock {
  id            String   @id @default(uuid())
  name          String
  symbol        String
  listingDate   DateTime
  isin          String   @unique
  marketCap     Float
  currentPrice  Float
  highLow       String
  stockPE       Float
  bookValue     Float
  dividendYield Float
  roce          Float
  roe           Float
}

enum Gender {
  male
  female
  other
  prefer_not_to_say
}
